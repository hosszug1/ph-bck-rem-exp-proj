# Prefect version must match Dockerfile.server and pyproject.toml
# FROM prefecthq/prefect:3-latest
FROM python:3.13-slim

# Set working directory
WORKDIR /app

# Copy requirements and install Python dependencies
COPY . .
RUN pip install --no-cache-dir -r requirements.txt
# RUN pip install prefect[docker]

# Connect to Prefect
ARG PREFECT_API_URL
ENV PREFECT_API_URL=${PREFECT_API_URL}

# Allow to config pool_name
ARG POOL_NAME
ENV POOL_NAME=${POOL_NAME}

# Copy the worker entrypoint script
# NOTE (from author): Sadly, I wasn't able to make the proper deployment work because
# of some strange errors so it's going to run with `serve` functionality instead of `deploy`.
# This is a good enough fallback for the purposes of this demo.
CMD ["python", "-m", "workflows.flows.deploy", "serve"]

# COPY worker_entrypoint.sh /worker_entrypoint.sh
# RUN chmod +x /worker_entrypoint.sh

# Use the entrypoint script
# ENTRYPOINT ["/worker_entrypoint.sh"]
